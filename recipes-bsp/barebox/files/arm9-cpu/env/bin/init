#!/bin/sh

export PATH=/env/bin

global hostname
global user
global autoboot_timeout
global boot.default
global linux.bootargs.base
global linux.bootargs.console
#linux.bootargs.dyn.* will be cleared at the beginning of boot
global linux.bootargs.dyn.ip
global linux.bootargs.dyn.root
global editcmd

[ -z "${global.hostname}" ] && global.hostname=generic
[ -z "${global.user}" ] && global.user=none
magicvar -a global.user "username (used in network filenames)"
[ -z "${global.autoboot_timeout}" ] && global.autoboot_timeout=3
magicvar -a global.autoboot_timeout "timeout in seconds before automatic booting"
[ -z "${global.boot.default}" ] && global.boot.default=net
[ -z "${global.editcmd}" ] && global.editcmd=sedit


# allow to stop the boot before execute the /env/init/*
# but without waiting
# runs twice to clear inpout buffer
timeout -s -a -v key 0
timeout -s -a -v key 0
autoboot="$?"

if [ "${key}" = "q" ]; then
	exit
fi

for i in /env/init/*; do
	. $i
done

echo -e -n "\nHit any key to stop autoboot: "

if [ "$autoboot" = 0 ]; then
	timeout -a $global.autoboot_timeout -v key
	autoboot="$?"
fi

if [ "${key}" = "q" ]; then
	exit
fi

if [ "$autoboot" = 0 ]; then
	boot
fi
