From: =?UTF-8?q?Ulrich=20=C3=96lmann?= <u.oelmann@pengutronix.de>
Date: Thu, 5 Jan 2023 16:25:15 +0100
Subject: [PATCH] devfs: do not fail when detecting overlapping partitions
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This temporarily alleviates the strict check introduced in [1] again to only
print a warning instead of not creating the overlapping partition at all. At the
time being we need to define barebox-state's partition in the devicetree to
obtain a phandle while it is defined in the GPT as well for Linux to find it.
Hence, this patch can be skipped as soon as barebox has a generic mechanism to
detect a state-partition by its partition-type-uuid.

[1] 7f9f45b9bfef ("devfs: Do not create overlapping partitions")

Signed-off-by: Ulrich Ã–lmann <u.oelmann@pengutronix.de>
---
 fs/devfs-core.c | 13 ++++---------
 1 file changed, 4 insertions(+), 9 deletions(-)

diff --git a/fs/devfs-core.c b/fs/devfs-core.c
index 1d8b2664f216..293133bdec02 100644
--- a/fs/devfs-core.c
+++ b/fs/devfs-core.c
@@ -410,18 +410,13 @@ static int check_overlap(struct cdev *cdev, const char *name, loff_t offset, lof
 
 		if (region_overlap(cpart_offset, cpart->size,
 				   offset, size))
-			goto conflict;
+			pr_warn("New partition %s (0x%08llx-0x%08llx) on %s "
+				"overlaps with partition %s (0x%08llx-0x%08llx)!\n",
+				name, offset, offset + size - 1, cdev->name,
+				cpart->name, cpart_offset, cpart_offset + cpart->size - 1);
 	}
 
 	return 0;
-
-conflict:
-	pr_err("New partition %s (0x%08llx-0x%08llx) on %s "
-		"overlaps with partition %s (0x%08llx-0x%08llx), not creating it\n",
-		name, offset, offset + size - 1, cdev->name,
-		cpart->name, cpart_offset, cpart_offset + cpart->size - 1);
-
-	return -EINVAL;
 }
 
 static struct cdev *__devfs_add_partition(struct cdev *cdev,
