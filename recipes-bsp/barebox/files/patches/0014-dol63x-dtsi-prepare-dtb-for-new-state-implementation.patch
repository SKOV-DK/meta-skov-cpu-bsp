From: Enrico Jorns <ejo@pengutronix.de>
Date: Tue, 30 Aug 2016 12:39:06 +0200
Subject: [PATCH] dol63x dtsi: prepare dtb for new state implementation

This does not use the bootstate node and default values anymore and has
some changes in requried variables.

Signed-off-by: Enrico Jorns <ejo@pengutronix.de>
---
 arch/arm/dts/imx6qdl-skov-dol63x.dtsi | 35 +++++------------------------------
 1 file changed, 5 insertions(+), 30 deletions(-)

diff --git a/arch/arm/dts/imx6qdl-skov-dol63x.dtsi b/arch/arm/dts/imx6qdl-skov-dol63x.dtsi
index 532c339ba9db..8e11472dd7d3 100644
--- a/arch/arm/dts/imx6qdl-skov-dol63x.dtsi
+++ b/arch/arm/dts/imx6qdl-skov-dol63x.dtsi
@@ -46,29 +46,13 @@
 		version-gpio = <&gpio2 10 0>, <&gpio2 15 0>, <&gpio2 8 0>, <&gpio2 9 0>, <&gpio2 12 0>, <&gpio2 14 0>, <&gpio2 11 0>, <&gpio2 13 0>;
 	};	
 
-	/* State: immutable part */
-	bootstate: bootstate {
-		compatible = "barebox,bootstate";
-		backend-type = "state";
-		backend = <&state>;
-
-		system0 { /* the node's name here must match the subnode's name in the 'state' node */
-			default_attempts = <3>;
-			boot = "nand0.firmware.ubi.system0"; /* must be in conjunction with the runtime path in 'dev' */
-		};
-
-		system1 { /* the node's name here must match the subnode's name in the 'state' node */
-			default_attempts = <3>;
-			boot = "nand0.firmware.ubi.system1"; /* must be in conjunction with the runtime path in 'dev' */
-		};
-	};
-
 	/* State: mutable part */
 	state: state {
 		magic = <0x4d433230>;
 		compatible = "barebox,state";
 		backend-type = "raw";
 		backend = <&state_storage>;
+		backend-stridesize = <0x40>;
 		#address-cells = <1>;
 		#size-cells = <1>;
 
@@ -90,10 +74,6 @@
 					type = "uint32";
 					default = <20>;
 				};
-				ok {
-					reg = <0x8 0x4>;
-					type = "uint32";
-				};
 			};
 
 			system1 { /* the node's name here must match the subnode's name in the 'bootstate' node */
@@ -101,25 +81,20 @@
 				#size-cells = <1>;
 
 				remaining_attempts {
-					reg = <0x10 0x4>;
+					reg = <0x8 0x4>;
 					type = "uint32";
 					default = <3>;
 				};
 				priority {
-					reg = <0x14 0x4>;
+					reg = <0xC 0x4>;
 					type = "uint32";
 					default = <20>;
 				};
-				ok {
-					reg = <0x18 0x4>;
-					type = "uint32";
-				};
 			};
 
-			watchdog_timeout {
-				reg = <0x20 0x4>;
+			last_chosen {
+				reg = <0x10 0x4>;
 				type = "uint32";
-				default = <60>;
 			};
 		};
 	};
