From: Sascha Hauer <s.hauer@pengutronix.de>
Date: Fri, 15 Jul 2016 13:11:20 +0200
Subject: [PATCH] state: Save on shutdown

The state framework is meant for storing persistent variables. To
make the state more persistent automatically save it on shutdown.
This is now the default behaviour, but can be disabled using a
'save_on_shutdown' variable attached to the state.

Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
---
 common/state/state.c | 15 +++++++++++++++
 common/state/state.h |  1 +
 2 files changed, 16 insertions(+)

diff --git a/common/state/state.c b/common/state/state.c
index 3997f8150cc4..9b1d4edef132 100644
--- a/common/state/state.c
+++ b/common/state/state.c
@@ -20,6 +20,7 @@
 #include <errno.h>
 #include <fs.h>
 #include <crc.h>
+#include <init.h>
 #include <linux/err.h>
 #include <linux/list.h>
 
@@ -54,6 +55,9 @@ static struct state *state_new(const char *name)
 	state->dirty = 1;
 	dev_add_param_bool(&state->dev, "dirty", NULL, NULL, &state->dirty,
 			   NULL);
+	state->save_on_shutdown = 1;
+	dev_add_param_bool(&state->dev, "save_on_shutdown", NULL, NULL,
+			   &state->save_on_shutdown, NULL);
 
 	list_add_tail(&state->list, &state_list);
 
@@ -571,3 +575,14 @@ void state_info(void)
 			printf("(no backend)\n");
 	}
 }
+
+static void state_shutdown(void)
+{
+	struct state *state;
+
+	list_for_each_entry(state, &state_list, list) {
+		if (state->save_on_shutdown)
+			state_save(state);
+	}
+}
+predevshutdown_exitcall(state_shutdown);
diff --git a/common/state/state.h b/common/state/state.h
index 7f9651abd847..32146ca1bbc7 100644
--- a/common/state/state.h
+++ b/common/state/state.h
@@ -100,6 +100,7 @@ struct state {
 
 	struct list_head variables; /* Sorted list of variables */
 	unsigned int dirty;
+	unsigned int save_on_shutdown;
 
 	struct state_backend backend;
 };
