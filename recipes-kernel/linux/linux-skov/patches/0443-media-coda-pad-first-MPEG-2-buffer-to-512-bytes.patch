From: Philipp Zabel <p.zabel@pengutronix.de>
Date: Mon, 18 Mar 2019 15:37:03 +0100
Subject: [PATCH] media: coda: pad first MPEG-2 buffer to 512 bytes

Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
---
 drivers/media/platform/coda/coda-bit.c | 29 +++++++++++++++++++++++++----
 1 file changed, 25 insertions(+), 4 deletions(-)

diff --git a/drivers/media/platform/coda/coda-bit.c b/drivers/media/platform/coda/coda-bit.c
index cdf686dc0ce8..9582a983481b 100644
--- a/drivers/media/platform/coda/coda-bit.c
+++ b/drivers/media/platform/coda/coda-bit.c
@@ -195,19 +195,39 @@ static void coda_kfifo_sync_to_device_write(struct coda_ctx *ctx)
 	coda_write(dev, wr_ptr, CODA_REG_BIT_WR_PTR(ctx->reg_idx));
 }
 
+static int coda_mpeg2_user_data(int size, char *p)
+{
+	if (size < 4)
+		return -EINVAL;
+
+	p[0] = 0x00;
+	p[1] = 0x00;
+	p[2] = 0x01;
+	p[3] = 0xb2;
+	memset(p + 4, 0xff, size - 4);
+
+	return 0;
+}
+
 static int coda_bitstream_pad(struct coda_ctx *ctx, u32 size)
 {
 	unsigned char *buf;
 	u32 n;
 
-	if (size < 6)
+	if (ctx->codec->src_fourcc == V4L2_PIX_FMT_H264 && size < 6)
 		size = 6;
+	if (ctx->codec->src_fourcc == V4L2_PIX_FMT_MPEG2 && size < 4)
+		size = 4;
 
 	buf = kmalloc(size, GFP_KERNEL);
 	if (!buf)
 		return -ENOMEM;
 
-	coda_h264_filler_nal(size, buf);
+	if (ctx->codec->src_fourcc == V4L2_PIX_FMT_H264)
+		coda_h264_filler_nal(size, buf);
+	if (ctx->codec->src_fourcc == V4L2_PIX_FMT_MPEG2)
+		coda_mpeg2_user_data(size, buf);
+
 	n = kfifo_in(&ctx->bitstream_fifo, buf, size);
 	kfree(buf);
 
@@ -245,9 +265,10 @@ static bool coda_bitstream_try_queue(struct coda_ctx *ctx,
 		return true;
 	}
 
-	/* Add zero padding before the first H.264 buffer, if it is too small */
+	/* Add padding before the first buffer, if it is too small */
 	if (ctx->qsequence == 0 && payload < 512 &&
-	    ctx->codec->src_fourcc == V4L2_PIX_FMT_H264)
+	    (ctx->codec->src_fourcc == V4L2_PIX_FMT_H264 ||
+	     ctx->codec->src_fourcc == V4L2_PIX_FMT_MPEG2))
 		coda_bitstream_pad(ctx, 512 - payload);
 
 	ret = coda_bitstream_queue(ctx, src_buf);
