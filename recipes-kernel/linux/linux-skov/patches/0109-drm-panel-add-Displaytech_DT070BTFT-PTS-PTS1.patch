diff --git a/arch/arm/boot/dts/Makefile b/arch/arm/boot/dts/Makefile
index 7afa722c691b..8239f0f720d4 100644
--- a/arch/arm/boot/dts/Makefile
+++ b/arch/arm/boot/dts/Makefile
@@ -523,6 +523,7 @@ dtb-$(CONFIG_SOC_IMX6Q) += \
 	imx6q-skov-revc-lt2.dtb \
 	imx6q-skov-revc-lt6.dtb \
 	imx6q-skov-reve-mi1010ait-1cp1.dtb \
+	imx6q-skov-reve-dt070btft-pts1.dtb \
 	imx6q-tbs2910.dtb \
 	imx6q-ts4900.dtb \
 	imx6q-ts7970.dtb \
diff --git a/arch/arm/boot/dts/imx6q-skov-reve-dt070btft-pts1.dts b/arch/arm/boot/dts/imx6q-skov-reve-dt070btft-pts1.dts
new file mode 100644
index 000000000000..d3a55134e606
--- /dev/null
+++ b/arch/arm/boot/dts/imx6q-skov-reve-dt070btft-pts1.dts
@@ -0,0 +1,92 @@
+// SPDX-License-Identifier: GPL-2.0
+//
+// Copyright (C) 2020 Pengutronix, Ulrich Oelmann <kernel@pengutronix.de>
+
+/dts-v1/;
+#include "imx6q.dtsi"
+#include "imx6qdl-skov-cpu.dtsi"
+
+/ {
+	model = "SKOV IMX6 CPU QuadCore";
+	compatible = "skov,imx6q-skov-reve-dt070btft-pts1", "skov,imx6", "fsl,imx6q";
+};
+
+&clks {
+	assigned-clocks = <&clks IMX6QDL_CLK_LDB_DI0_SEL>,
+	                  <&clks IMX6QDL_CLK_LDB_DI1_SEL>;
+	assigned-clock-parents = <&clks IMX6QDL_CLK_PLL5_VIDEO_DIV>,
+	                         <&clks IMX6QDL_CLK_PLL5_VIDEO_DIV>;
+};
+
+&hdmi {
+	status = "okay";
+	ddc-i2c-bus = <&i2c2>;
+};
+
+&i2c1 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c1_2>;
+	status = "okay";
+
+	touchscreen@38 {
+		compatible = "edt,edt-ft5406", "edt,edt-ft5x06";
+		reg = <0x38>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_touchscreen>;
+		interrupt-parent = <&gpio3>;
+		interrupts = <19 IRQ_TYPE_EDGE_FALLING>;
+		reset-gpios = <&gpio3 23 GPIO_ACTIVE_LOW>;
+		touchscreen-size-x = <1024>;
+		touchscreen-size-y = <600>;
+		wakeup-source;
+	};
+};
+
+&i2c2 {
+	status = "okay";
+};
+
+&ldb {
+	status = "okay";
+
+	lvds0: lvds-channel@0 {
+		status = "okay";
+
+		port@4 {
+			reg = <4>;
+			lvds0_out: endpoint {
+				remote-endpoint = <&panel_in>;
+			};
+		};
+	};
+};
+
+&panel {
+	compatible = "displaytech,dt070btft-pts1";
+
+	port {
+		panel_in: endpoint {
+			remote-endpoint = <&lvds0_out>;
+		};
+	};
+};
+
+&pinctrl_board {
+	pinctrl_i2c1_2: i2c1grp-2 {
+		fsl,pins = <
+			/* external 1 k pull up */
+			MX6QDL_PAD_EIM_D21__I2C1_SCL		0x40010878
+			/* external 1 k pull up */
+			MX6QDL_PAD_EIM_D28__I2C1_SDA		0x40010878
+		>;
+	};
+
+	pinctrl_touchscreen: touchscreengrp {
+		fsl,pins = <
+			/* external 10 k pull up */
+			MX6QDL_PAD_EIM_D19__GPIO3_IO19		0x1b0b0		/* CTP_INT */
+			MX6QDL_PAD_EIM_D23__GPIO3_IO23		0x1b0b0		/* CTP_RST */
+		>;
+	};
+};
diff --git a/drivers/gpu/drm/panel/panel-simple.c b/drivers/gpu/drm/panel/panel-simple.c
index f2f8dd1355aa..97a55af98911 100644
--- a/drivers/gpu/drm/panel/panel-simple.c
+++ b/drivers/gpu/drm/panel/panel-simple.c
@@ -2194,6 +2194,36 @@ static const struct panel_desc multi_inno_1010ait_1cp1 = {
 	.bus_flags = DRM_BUS_FLAG_DE_HIGH,
 };
 
+static const struct display_timing displaytech_dt070btft_pts1_timing = {
+	.pixelclock = { 45000000, 51200000, 57000000 },
+	.hactive = { 1024, 1024, 1024 },
+	.hfront_porch = { 140, 160, 180 },
+	.hback_porch = { 130, 130, 130 },
+	.hsync_len = { 30, 30, 30 },
+	.vactive = { 600, 600, 600 },
+	.vfront_porch = { 2, 12, 22 },
+	.vback_porch = { 19, 19, 19 },
+	.vsync_len = { 4, 4, 4 },
+	.flags = DISPLAY_FLAGS_HSYNC_LOW | DISPLAY_FLAGS_VSYNC_LOW |
+		 DISPLAY_FLAGS_DE_HIGH,
+};
+
+static const struct panel_desc displaytech_dt070btft_pts1 = {
+	.timings = & displaytech_dt070btft_pts1_timing,
+	.num_timings = 1,
+	.bpc = 8,
+	.size = {
+		.width = 155,
+		.height = 86,
+	},
+	.delay = {
+		.enable = 50,
+		.disable = 50,
+	},
+	.bus_format = MEDIA_BUS_FMT_RGB888_1X7X4_SPWG,
+	.bus_flags = DRM_BUS_FLAG_DE_HIGH,
+};
+
 static const struct display_timing nec_nl12880bc20_05_timing = {
 	.pixelclock = { 67000000, 71000000, 75000000 },
 	.hactive = { 1280, 1280, 1280 },
@@ -3432,6 +3462,9 @@ static const struct of_device_id platform_of_match[] = {
 	}, {
 		.compatible = "multi-inno,1010ait-1cp1",
 		.data = &multi_inno_1010ait_1cp1,
+	}, {
+		.compatible = "displaytech,dt070btft-pts1",
+		.data = & displaytech_dt070btft_pts1,
 	}, {
 		.compatible = "nec,nl12880bc20-05",
 		.data = &nec_nl12880bc20_05,
diff --git a/drivers/skov/skov_version.c b/drivers/skov/skov_version.c
index 904b1a529d04..3acef123b6be 100644
--- a/drivers/skov/skov_version.c
+++ b/drivers/skov/skov_version.c
@@ -29,6 +29,7 @@
  * 00010110     - IMX6 CPU QuadCore R1G F4G      D    1024MB -  4096MB
  * 00010111     ---- not defined ----
  * 00011000     - IMX6 mkII CPU QuadCore R1G F4G E    1024MB -  4096MB
+ * 00011001     - IMX6 mkII CPU QuadCore R1G F4G E    1024MB -  4096MB
  */
 #include <linux/err.h>
 #include <linux/clk.h>
@@ -126,6 +127,7 @@ static ssize_t show(struct device *dev, struct device_attribute *attr, char *buf
 		case 20:
 		case 22:
 		case 24:
+		case 25:
 			return sprintf(buf, "%u\n", mem[2]);
 		default:
 			return sprintf(buf, "Unsupported board revision: 0x%x\n", svpd->var);
@@ -139,6 +141,7 @@ static ssize_t show(struct device *dev, struct device_attribute *attr, char *buf
 		case 22:
 			return sprintf(buf, "%s\n", rev[3]);
 		case 24:
+		case 25:
 			return sprintf(buf, "%s\n", rev[4]);
 		default:
 			return sprintf(buf, "Unsupported board revision: 0x%x\n", svpd->var);
@@ -152,6 +155,7 @@ static ssize_t show(struct device *dev, struct device_attribute *attr, char *buf
 		case 22:
 			return sprintf(buf, "%s\n", description[6]);
 		case 24:
+		case 25:
 			return sprintf(buf, "%s\n", description[8]);
 		default:
 			return sprintf(buf, "Unsupported board revision: 0x%x\n", svpd->var);
@@ -164,6 +168,7 @@ static ssize_t show(struct device *dev, struct device_attribute *attr, char *buf
 		case 20:
 		case 22:
 		case 24:
+		case 25:
 			return sprintf(buf, "%u\n", nand[8]);
 		default:
 			return sprintf(buf, "Unsupported board revision: 0x%x\n", svpd->var);
