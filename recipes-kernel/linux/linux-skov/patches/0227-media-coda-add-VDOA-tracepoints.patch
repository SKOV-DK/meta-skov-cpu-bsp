From: Philipp Zabel <p.zabel@pengutronix.de>
Date: Wed, 13 Oct 2021 15:05:26 +0200
Subject: [PATCH] media: coda: add VDOA tracepoints

Add tracepoints to allow recording when the VDOA is active.

Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
---
 drivers/media/platform/chips-media/imx-vdoa.c   |  7 ++++
 drivers/media/platform/chips-media/trace-vdoa.h | 50 +++++++++++++++++++++++++
 2 files changed, 57 insertions(+)
 create mode 100644 drivers/media/platform/chips-media/trace-vdoa.h

diff --git a/drivers/media/platform/chips-media/imx-vdoa.c b/drivers/media/platform/chips-media/imx-vdoa.c
index c70871bae193..7483b0a2b545 100644
--- a/drivers/media/platform/chips-media/imx-vdoa.c
+++ b/drivers/media/platform/chips-media/imx-vdoa.c
@@ -17,6 +17,8 @@
 #include <linux/slab.h>
 
 #include "imx-vdoa.h"
+#define CREATE_TRACE_POINTS
+#include "trace-vdoa.h"
 
 #define VDOA_NAME "imx-vdoa"
 
@@ -122,6 +124,9 @@ static irqreturn_t vdoa_irq_handler(int irq, void *data)
 		dev_warn(vdoa->dev, "Spurious interrupt\n");
 	}
 	curr_ctx->completed_job++;
+
+	trace_vdoa_done(curr_ctx->completed_job - 1);
+
 	complete(&curr_ctx->completion);
 
 	return IRQ_HANDLED;
@@ -190,6 +195,8 @@ void vdoa_device_run(struct vdoa_ctx *ctx, dma_addr_t dst, dma_addr_t src)
 	val = round_up(src_q_data->bytesperline * src_q_data->height, 4096);
 	writel(val, vdoa->regs + VDOAVUBO);
 
+	trace_vdoa_run(ctx->submitted_job - 1);
+
 	/* Enable interrupts and start transfer */
 	writel(VDOAIE_EITERR | VDOAIE_EIEOT, vdoa->regs + VDOAIE);
 	writel(VDOASRR_START, vdoa->regs + VDOASRR);
diff --git a/drivers/media/platform/chips-media/trace-vdoa.h b/drivers/media/platform/chips-media/trace-vdoa.h
new file mode 100644
index 000000000000..5c824198297f
--- /dev/null
+++ b/drivers/media/platform/chips-media/trace-vdoa.h
@@ -0,0 +1,50 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM vdoa
+
+#if !defined(__VDOA_TRACE_H__) || defined(TRACE_HEADER_MULTI_READ)
+#define __VDOA_TRACE_H__
+
+#include <linux/tracepoint.h>
+
+TRACE_EVENT(vdoa_run,
+	TP_PROTO(int job),
+
+	TP_ARGS(job),
+
+	TP_STRUCT__entry(
+		__field(int, job)
+	),
+
+	TP_fast_assign(
+		__entry->job = job;
+	),
+
+	TP_printk("job = %d", __entry->job)
+);
+
+TRACE_EVENT(vdoa_done,
+	TP_PROTO(int job),
+
+	TP_ARGS(job),
+
+	TP_STRUCT__entry(
+		__field(int, job)
+	),
+
+	TP_fast_assign(
+		__entry->job = job;
+	),
+
+	TP_printk("job = %d", __entry->job)
+);
+
+#endif /* __VDOA_TRACE_H__ */
+
+#undef TRACE_INCLUDE_PATH
+#define TRACE_INCLUDE_PATH ../../drivers/media/platform/chips-media
+#undef TRACE_INCLUDE_FILE
+#define TRACE_INCLUDE_FILE trace-vdoa
+
+/* This part must be outside protection */
+#include <trace/define_trace.h>
