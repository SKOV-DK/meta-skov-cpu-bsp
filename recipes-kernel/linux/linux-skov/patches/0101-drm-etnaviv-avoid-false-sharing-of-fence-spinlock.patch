From: Lucas Stach <l.stach@pengutronix.de>
Date: Thu, 22 Nov 2018 16:38:53 +0100
Subject: [PATCH] drm/etnaviv: avoid false sharing of fence spinlock

TODO: measure if this really reduces contention.

Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
---
 drivers/gpu/drm/etnaviv/etnaviv_gpu.c | 5 +++--
 drivers/gpu/drm/etnaviv/etnaviv_gpu.h | 1 -
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/etnaviv/etnaviv_gpu.c b/drivers/gpu/drm/etnaviv/etnaviv_gpu.c
index 51320eeebfcf..9dfeafe70cea 100644
--- a/drivers/gpu/drm/etnaviv/etnaviv_gpu.c
+++ b/drivers/gpu/drm/etnaviv/etnaviv_gpu.c
@@ -1100,6 +1100,7 @@ void etnaviv_gpu_recover_hang(struct etnaviv_gem_submit *submit)
 /* fence object management */
 struct etnaviv_fence {
 	struct etnaviv_gpu *gpu;
+	struct spinlock lock;
 	struct dma_fence base;
 };
 
@@ -1156,8 +1157,9 @@ static struct dma_fence *etnaviv_gpu_fence_alloc(struct etnaviv_gpu *gpu)
 		return NULL;
 
 	f->gpu = gpu;
+	spin_lock_init(&f->lock);
 
-	dma_fence_init(&f->base, &etnaviv_fence_ops, &gpu->fence_spinlock,
+	dma_fence_init(&f->base, &etnaviv_fence_ops, &f->lock,
 		       gpu->fence_context, ++gpu->next_fence);
 
 	return &f->base;
@@ -1725,7 +1727,6 @@ static int etnaviv_gpu_bind(struct device *dev, struct device *master,
 	gpu->drm = drm;
 	gpu->fence_context = dma_fence_context_alloc(1);
 	idr_init(&gpu->fence_idr);
-	spin_lock_init(&gpu->fence_spinlock);
 
 	INIT_WORK(&gpu->sync_point_work, sync_point_worker);
 	init_waitqueue_head(&gpu->fence_event);
diff --git a/drivers/gpu/drm/etnaviv/etnaviv_gpu.h b/drivers/gpu/drm/etnaviv/etnaviv_gpu.h
index f1204b070fb8..b0969a5342d9 100644
--- a/drivers/gpu/drm/etnaviv/etnaviv_gpu.h
+++ b/drivers/gpu/drm/etnaviv/etnaviv_gpu.h
@@ -123,7 +123,6 @@ struct etnaviv_gpu {
 	u32 completed_fence;
 	wait_queue_head_t fence_event;
 	u64 fence_context;
-	spinlock_t fence_spinlock;
 
 	/* worker for handling 'sync' points: */
 	struct work_struct sync_point_work;
