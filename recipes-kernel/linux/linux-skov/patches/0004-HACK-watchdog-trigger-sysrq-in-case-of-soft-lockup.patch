From: Marc Kleine-Budde <mkl@pengutronix.de>
Date: Tue, 25 Jan 2022 10:55:56 +0100
Subject: [PATCH] HACK: watchdog: trigger sysrq in case of soft lockup

Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
---
 kernel/watchdog.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/kernel/watchdog.c b/kernel/watchdog.c
index 01bf977090dc..79a88f3535fb 100644
--- a/kernel/watchdog.c
+++ b/kernel/watchdog.c
@@ -23,6 +23,7 @@
 #include <linux/sched/debug.h>
 #include <linux/sched/isolation.h>
 #include <linux/stop_machine.h>
+#include <linux/sysrq.h>
 
 #include <asm/irq_regs.h>
 #include <linux/kvm_para.h>
@@ -420,6 +421,20 @@ static enum hrtimer_restart watchdog_timer_fn(struct hrtimer *hrtimer)
 			clear_bit_unlock(0, &soft_lockup_nmi_warn);
 		}
 
+		/* loglevel(0-9) reboot(b) crash(c) terminate-all-tasks(e)
+		 * memory-full-oom-kill(f) kill-all-tasks(i)
+		 * thaw-filesystems(j) sak(k)
+		 * show-backtrace-all-active-cpus(l) show-memory-usage(m)
+		 * nice-all-RT-tasks(n) poweroff(o) show-registers(p)
+		 * show-all-timers(q) unraw(r) sync(s) show-task-states(t)
+		 * unmount(u) show-blocked-tasks(w) dump-ftrace-buffer(z)
+		 */
+
+		handle_sysrq('p');
+		handle_sysrq('q');
+		handle_sysrq('w');
+		handle_sysrq('t');
+
 		add_taint(TAINT_SOFTLOCKUP, LOCKDEP_STILL_OK);
 		if (softlockup_panic)
 			panic("softlockup: hung tasks");
