From: Philipp Zabel <p.zabel@pengutronix.de>
Date: Mon, 10 Sep 2018 15:45:29 +0200
Subject: [PATCH] media: coda: track activity using v4l2-stats

Add simple time based activity tracking using v4l2-stats for the
BIT processor, JPEG encoder/decoder, and VDOA units.

Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
---
 drivers/media/platform/chips-media/coda-bit.c    |  3 +++
 drivers/media/platform/chips-media/coda-common.c | 17 +++++++++++++++++
 drivers/media/platform/chips-media/coda-jpeg.c   |  3 +++
 drivers/media/platform/chips-media/coda.h        | 23 +++++++++++++++++++++++
 drivers/media/platform/chips-media/imx-vdoa.c    | 21 +++++++++++++++++++++
 5 files changed, 67 insertions(+)

diff --git a/drivers/media/platform/chips-media/coda-bit.c b/drivers/media/platform/chips-media/coda-bit.c
index 93398131f94e..375d80649301 100644
--- a/drivers/media/platform/chips-media/coda-bit.c
+++ b/drivers/media/platform/chips-media/coda-bit.c
@@ -103,6 +103,7 @@ static void coda_command_async(struct coda_ctx *ctx, int cmd)
 	coda_write(dev, ctx->params.codec_mode_aux, CODA7_REG_BIT_RUN_AUX_STD);
 
 	trace_coda_bit_run(ctx, cmd);
+	coda_stats_run(dev->bit_stats);
 
 	coda_write(dev, cmd, CODA_REG_BIT_RUN_COMMAND);
 }
@@ -117,6 +118,7 @@ static int coda_command_sync(struct coda_ctx *ctx, int cmd)
 	coda_command_async(ctx, cmd);
 	ret = coda_wait_timeout(dev);
 	trace_coda_bit_done(ctx);
+	coda_stats_done(dev->bit_stats);
 
 	return ret;
 }
@@ -2710,6 +2712,7 @@ irqreturn_t coda_irq_handler(int irq, void *data)
 	}
 
 	trace_coda_bit_done(ctx);
+	coda_stats_done(dev->bit_stats);
 
 	if (ctx->aborting) {
 		coda_dbg(1, ctx, "task has been aborted\n");
diff --git a/drivers/media/platform/chips-media/coda-common.c b/drivers/media/platform/chips-media/coda-common.c
index 2e7d7be85386..1a64fee50ab5 100644
--- a/drivers/media/platform/chips-media/coda-common.c
+++ b/drivers/media/platform/chips-media/coda-common.c
@@ -3081,10 +3081,24 @@ static void coda_fw_callback(const struct firmware *fw, void *context)
 	}
 #endif
 
+	dev->bit_stats = v4l2_register_stats("coda-bit");
+	if (IS_ERR(dev->bit_stats))
+		goto rel_mdev;
+
+	if (dev->devtype->product == CODA_960) {
+		dev->jpeg_stats = v4l2_register_stats("coda-jpeg");
+		if (IS_ERR(dev->jpeg_stats))
+			goto unreg_bit;
+	}
+
 	pm_runtime_put_sync(dev->dev);
 	return;
 
+unreg_bit:
+	v4l2_unregister_stats(dev->bit_stats);
 #ifdef CONFIG_MEDIA_CONTROLLER
+rel_mdev:
+	media_device_unregister(&dev->mdev);
 rel_func:
 	while (--i >= 0)
 		v4l2_m2m_unregister_media_function(&dev->m2m_func[i]);
@@ -3354,6 +3368,9 @@ static int coda_remove(struct platform_device *pdev)
 	struct coda_dev *dev = platform_get_drvdata(pdev);
 	int i;
 
+	if (dev->devtype->product == CODA_960)
+		v4l2_unregister_stats(dev->jpeg_stats);
+	v4l2_unregister_stats(dev->bit_stats);
 #ifdef CONFIG_MEDIA_CONTROLLER
 	if (media_devnode_is_registered(dev->mdev.devnode)) {
 		media_device_unregister(&dev->mdev);
diff --git a/drivers/media/platform/chips-media/coda-jpeg.c b/drivers/media/platform/chips-media/coda-jpeg.c
index 0d9be2dc20e0..6c9e84929784 100644
--- a/drivers/media/platform/chips-media/coda-jpeg.c
+++ b/drivers/media/platform/chips-media/coda-jpeg.c
@@ -1192,6 +1192,7 @@ static int coda9_jpeg_prepare_encode(struct coda_ctx *ctx)
 	coda_write(dev, 0, CODA9_GDI_WPROT_RGN_EN);
 
 	trace_coda_jpeg_run(ctx, src_buf);
+	coda_stats_run(dev->jpeg_stats);
 
 	coda_write(dev, 1, CODA9_REG_JPEG_PIC_START);
 
@@ -1545,6 +1546,8 @@ v4l2_err(&dev->v4l2_dev, "word_ptr = %d bit_ptr = %d\n",
 		return IRQ_HANDLED;
 	}
 
+	coda_stats_done(dev->jpeg_stats);
+
 	complete(&ctx->completion);
 
 	return IRQ_HANDLED;
diff --git a/drivers/media/platform/chips-media/coda.h b/drivers/media/platform/chips-media/coda.h
index 5036272ab98c..f222b4a23115 100644
--- a/drivers/media/platform/chips-media/coda.h
+++ b/drivers/media/platform/chips-media/coda.h
@@ -16,6 +16,7 @@
 #include <linux/irqreturn.h>
 #include <linux/mutex.h>
 #include <linux/kfifo.h>
+#include <linux/timekeeping.h>
 #include <linux/videodev2.h>
 #include <linux/ratelimit.h>
 
@@ -104,6 +105,9 @@ struct coda_dev {
 	struct ida		ida;
 	struct dentry		*debugfs_root;
 	struct ratelimit_state	mb_err_rs;
+
+	struct v4l2_stats	*bit_stats;
+	struct v4l2_stats	*jpeg_stats;
 };
 
 struct coda_codec {
@@ -406,4 +410,23 @@ extern const struct coda_context_ops coda9_jpeg_decode_ops;
 irqreturn_t coda_irq_handler(int irq, void *data);
 irqreturn_t coda9_jpeg_irq_handler(int irq, void *data);
 
+static inline void coda_stats_run(struct v4l2_stats *stats)
+{
+	__v4l2_stats_start(stats, ktime_get());
+}
+
+static inline void coda_stats_done(struct v4l2_stats *stats)
+{
+	unsigned long flags;
+	ktime_t now = ktime_get();
+
+	/*
+	 * Called both from dec_seq_init worker thread
+	 * with IRQs enabled, and from coda_irq_handler.
+	 */
+	spin_lock_irqsave(&stats->lock, flags);
+	__v4l2_stats_stop(stats, now);
+	spin_unlock_irqrestore(&stats->lock, flags);
+}
+
 #endif /* __CODA_H__ */
diff --git a/drivers/media/platform/chips-media/imx-vdoa.c b/drivers/media/platform/chips-media/imx-vdoa.c
index 7483b0a2b545..30b9914495a1 100644
--- a/drivers/media/platform/chips-media/imx-vdoa.c
+++ b/drivers/media/platform/chips-media/imx-vdoa.c
@@ -16,6 +16,8 @@
 #include <linux/videodev2.h>
 #include <linux/slab.h>
 
+#include <media/v4l2-dev.h>
+
 #include "imx-vdoa.h"
 #define CREATE_TRACE_POINTS
 #include "trace-vdoa.h"
@@ -81,6 +83,7 @@ struct vdoa_data {
 	struct device		*dev;
 	struct clk		*vdoa_clk;
 	void __iomem		*regs;
+	struct v4l2_stats	*stats;
 };
 
 struct vdoa_q_data {
@@ -103,6 +106,7 @@ static irqreturn_t vdoa_irq_handler(int irq, void *data)
 {
 	struct vdoa_data *vdoa = data;
 	struct vdoa_ctx *curr_ctx;
+	unsigned long flags;
 	u32 val;
 
 	/* Disable interrupts */
@@ -127,6 +131,10 @@ static irqreturn_t vdoa_irq_handler(int irq, void *data)
 
 	trace_vdoa_done(curr_ctx->completed_job - 1);
 
+	spin_lock_irqsave(&vdoa->stats->lock, flags);
+	__v4l2_stats_stop(vdoa->stats, ktime_get());
+	spin_unlock_irqrestore(&vdoa->stats->lock, flags);
+
 	complete(&curr_ctx->completion);
 
 	return IRQ_HANDLED;
@@ -154,6 +162,7 @@ void vdoa_device_run(struct vdoa_ctx *ctx, dma_addr_t dst, dma_addr_t src)
 {
 	struct vdoa_q_data *src_q_data, *dst_q_data;
 	struct vdoa_data *vdoa = ctx->vdoa;
+	unsigned long flags;
 	u32 val;
 
 	if (vdoa->curr_ctx)
@@ -195,6 +204,10 @@ void vdoa_device_run(struct vdoa_ctx *ctx, dma_addr_t dst, dma_addr_t src)
 	val = round_up(src_q_data->bytesperline * src_q_data->height, 4096);
 	writel(val, vdoa->regs + VDOAVUBO);
 
+	spin_lock_irqsave(&vdoa->stats->lock, flags);
+	__v4l2_stats_start(vdoa->stats, ktime_get());
+	spin_unlock_irqrestore(&vdoa->stats->lock, flags);
+
 	trace_vdoa_run(ctx->submitted_job - 1);
 
 	/* Enable interrupts and start transfer */
@@ -326,6 +339,10 @@ static int vdoa_probe(struct platform_device *pdev)
 		return ret;
 	}
 
+	vdoa->stats = v4l2_register_stats("vdoa");
+	if (IS_ERR(vdoa->stats))
+		return PTR_ERR(vdoa->stats);
+
 	platform_set_drvdata(pdev, vdoa);
 
 	return 0;
@@ -333,6 +350,10 @@ static int vdoa_probe(struct platform_device *pdev)
 
 static int vdoa_remove(struct platform_device *pdev)
 {
+	struct vdoa_data *vdoa = platform_get_drvdata(pdev);
+
+	v4l2_unregister_stats(vdoa->stats);
+
 	return 0;
 }
 
