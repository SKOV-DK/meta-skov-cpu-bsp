From: Lucas Stach <l.stach@pengutronix.de>
Date: Thu, 15 Feb 2018 10:49:12 +0100
Subject: [PATCH] drm/etnaviv: init DMA ops for virtual master device

All the DRM GEM dma-buf import/export operations are done through the
virtual DRM master device. As this isn't instanciated from DT anymore
we need to make sure the DMA ops are set up correctly.

Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
---
 drivers/gpu/drm/etnaviv/etnaviv_drv.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/etnaviv/etnaviv_drv.c b/drivers/gpu/drm/etnaviv/etnaviv_drv.c
index 9b2720b41571..fbab49c1a936 100644
--- a/drivers/gpu/drm/etnaviv/etnaviv_drv.c
+++ b/drivers/gpu/drm/etnaviv/etnaviv_drv.c
@@ -592,8 +592,6 @@ static int etnaviv_pdev_probe(struct platform_device *pdev)
 	struct device *dev = &pdev->dev;
 	struct component_match *match = NULL;
 
-	dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
-
 	if (!dev->platform_data) {
 		struct device_node *core_node;
 
@@ -663,6 +661,14 @@ static int __init etnaviv_init(void)
 			goto unregister_platform_driver;
 		}
 		etnaviv_drm = pdev;
+
+		/*
+		 * There might be a nicer way to configure the virtual master
+		 * device DMA ops than to use the configuration of the first
+		 * GPU device, but this is good enough for now.
+		 */
+		of_dma_configure(&pdev->dev, np, false);
+
 		of_node_put(np);
 		break;
 	}
