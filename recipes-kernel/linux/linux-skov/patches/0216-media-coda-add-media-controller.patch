From: Philipp Zabel <p.zabel@pengutronix.de>
Date: Thu, 25 Nov 2021 16:45:51 +0100
Subject: [PATCH] media: coda: add media controller

Add a media controller device to fix this v4l2-compliance test failure:

		fail: v4l2-test-codecs.cpp(35): node->function != MEDIA_ENT_F_PROC_VIDEO_ENCODER
	test VIDIOC_(TRY_)ENCODER_CMD: FAIL

Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
---
 drivers/media/platform/chips-media/coda-common.c | 47 ++++++++++++++++++++++++
 drivers/media/platform/chips-media/coda.h        |  3 ++
 2 files changed, 50 insertions(+)

diff --git a/drivers/media/platform/chips-media/coda-common.c b/drivers/media/platform/chips-media/coda-common.c
index af71eea04dbd..bf068e177496 100644
--- a/drivers/media/platform/chips-media/coda-common.c
+++ b/drivers/media/platform/chips-media/coda-common.c
@@ -3038,9 +3038,44 @@ static void coda_fw_callback(const struct firmware *fw, void *context)
 		}
 	}
 
+#ifdef CONFIG_MEDIA_CONTROLLER
+	dev->mdev.dev = dev->v4l2_dev.dev;
+	strscpy(dev->mdev.model, CODA_NAME, sizeof(dev->mdev.model));
+	strscpy(dev->mdev.bus_info, "platform:" CODA_NAME, sizeof(dev->mdev.bus_info));
+	media_device_init(&dev->mdev);
+	dev->v4l2_dev.mdev = &dev->mdev;
+
+	for (i = 0; i < dev->devtype->num_vdevs; i++) {
+		int function = (dev->devtype->vdevs[i]->type == CODA_INST_ENCODER) ?
+			       MEDIA_ENT_F_PROC_VIDEO_ENCODER :
+			       MEDIA_ENT_F_PROC_VIDEO_DECODER;
+
+		ret = v4l2_m2m_register_media_function(&dev->m2m_func[i],
+						       &dev->vfd[i], function);
+		if (ret) {
+			v4l2_err(&dev->v4l2_dev,
+				 "Failed to register %s media function: %d\n",
+				 dev->devtype->vdevs[i]->name, ret);
+			goto rel_func;
+		}
+	}
+
+	ret = media_device_register(&dev->mdev);
+	if (ret) {
+		v4l2_err(&dev->v4l2_dev, "Failed to register media device\n");
+		goto rel_func;
+	}
+#endif
+
 	pm_runtime_put_sync(dev->dev);
 	return;
 
+#ifdef CONFIG_MEDIA_CONTROLLER
+rel_func:
+	while (--i >= 0)
+		v4l2_m2m_unregister_media_function(&dev->m2m_func[i]);
+	media_device_cleanup(&dev->mdev);
+#endif
 rel_vfd:
 	while (--i >= 0)
 		video_unregister_device(&dev->vfd[i]);
@@ -3305,6 +3340,18 @@ static int coda_remove(struct platform_device *pdev)
 	struct coda_dev *dev = platform_get_drvdata(pdev);
 	int i;
 
+#ifdef CONFIG_MEDIA_CONTROLLER
+	if (media_devnode_is_registered(dev->mdev.devnode)) {
+		media_device_unregister(&dev->mdev);
+		for (i = 0; i < ARRAY_SIZE(dev->m2m_func); i++) {
+			if (!dev->m2m_func[i].source)
+				continue;
+
+			v4l2_m2m_unregister_media_function(&dev->m2m_func[i]);
+		}
+		media_device_cleanup(&dev->mdev);
+	}
+#endif
 	for (i = 0; i < ARRAY_SIZE(dev->vfd); i++) {
 		if (video_get_drvdata(&dev->vfd[i]))
 			video_unregister_device(&dev->vfd[i]);
diff --git a/drivers/media/platform/chips-media/coda.h b/drivers/media/platform/chips-media/coda.h
index ddfd0a32c653..df86c37bc373 100644
--- a/drivers/media/platform/chips-media/coda.h
+++ b/drivers/media/platform/chips-media/coda.h
@@ -22,6 +22,7 @@
 #include <media/v4l2-ctrls.h>
 #include <media/v4l2-device.h>
 #include <media/v4l2-fh.h>
+#include <media/v4l2-mem2mem.h>
 #include <media/videobuf2-v4l2.h>
 
 #include "coda_regs.h"
@@ -77,7 +78,9 @@ struct coda_aux_buf {
 
 struct coda_dev {
 	struct v4l2_device	v4l2_dev;
+	struct media_device	mdev;
 	struct video_device	vfd[6];
+	struct v4l2_m2m_func	m2m_func[6];
 	struct device		*dev;
 	const struct coda_devtype *devtype;
 	int			firmware;
