From: Oleksij Rempel <o.rempel@pengutronix.de>
Date: Fri, 3 Nov 2023 10:39:21 +0100
Subject: [PATCH] arm64: dts: freescale: imx8mp-skov: add different comments
 and workarounds

Add things which are currently not mainline.

Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
---
 .../arm64/boot/dts/freescale/imx8mp-skov-reva.dtsi | 31 ++++++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/arch/arm64/boot/dts/freescale/imx8mp-skov-reva.dtsi b/arch/arm64/boot/dts/freescale/imx8mp-skov-reva.dtsi
index 59813ef8e2bb..f396d45b98a2 100644
--- a/arch/arm64/boot/dts/freescale/imx8mp-skov-reva.dtsi
+++ b/arch/arm64/boot/dts/freescale/imx8mp-skov-reva.dtsi
@@ -116,6 +116,11 @@ reg_24v: regulator-24v {
 		regulator-name = "24V";
 		regulator-min-microvolt = <24000000>;
 		regulator-max-microvolt = <24000000>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_reg24v>;
+		interrupts-extended = <&gpio4 23 IRQ_TYPE_EDGE_FALLING>;
+		system-critical-regulator;
+		regulator-uv-less-critical-window-ms = <50>;
 	};
 
 	reg_can2rs: regulator-can2rs {
@@ -138,6 +143,15 @@ reg_canrs: regulator-canrs {
 		gpio = <&gpio4 21 GPIO_ACTIVE_LOW>;
 	};
 
+	/* TODO: LCD bias Power Supply with integrated VCOM Buffer TPS65150
+	 * is not implemented yet. IN pin should be controlled by PWM4.
+	 * Different boards have different "bootstrapped" output voltages.
+	 * VGH pin: 10" - 22V, 7" - 16V
+	 * AVDD pin: 10" - 8,2V, 7" - 10,4V
+	 * The VCOM buffer in the TPS65150 device is essentially a
+	 * transconductance amplifier. It's designed to drive capacitive loads,
+	 * like the common plane voltage (VCOM) for an LCD display.
+	 */
 	reg_tft_vcom: regulator-tft-vcom {
 		compatible = "pwm-regulator";
 		pwms = <&pwm4 0 20000 0>;
@@ -150,6 +164,8 @@ reg_tft_vcom: regulator-tft-vcom {
 		status = "disabled";
 	};
 
+	/* TODO: actually this regulator is part of nxp,pca9450c, implementig
+	 * it separately */
 	reg_vsd_3v3: regulator-vsd-3v3 {
 		pinctrl-names = "default";
 		pinctrl-0 = <&pinctrl_reg_vsd_3v3>;
@@ -391,6 +407,13 @@ &uart1 {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_uart1>;
 	status = "okay";
+	/*
+	 * While there is no CTS line, the property "uart-has-rtscts" is still
+	 * the right thing to do to enable the UART to do RS485. In RS485-Mode
+	 * CTS isn't used anyhow and there is no dedicated property
+	 * "uart-has-rts-but-no-cts".
+	 */
+	uart-has-rtscts;
 };
 
 &uart2 {
@@ -571,6 +594,12 @@ MX8MP_IOMUXC_SAI3_MCLK__PWM4_OUT			0x116
 		>;
 	};
 
+	pinctrl_reg24v: reg24vgrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI2_RXD0__GPIO4_IO23			0x154
+		>;
+	};
+
 	pinctrl_reg_vsd_3v3: regvsd3v3grp {
 		fsl,pins = <
 			MX8MP_IOMUXC_SD2_RESET_B__GPIO2_IO19	0x40
@@ -605,6 +634,8 @@ pinctrl_uart1: uart1grp {
 			MX8MP_IOMUXC_UART1_RXD__UART1_DCE_RX			0x140
 			MX8MP_IOMUXC_UART1_TXD__UART1_DCE_TX			0x140
 			MX8MP_IOMUXC_UART3_RXD__UART1_DTE_RTS			0x140
+			/* CTS pin is not connected, but currently needed as workaround */
+			MX8MP_IOMUXC_UART3_TXD__UART1_DTE_CTS			0x140
 		>;
 	};
 
