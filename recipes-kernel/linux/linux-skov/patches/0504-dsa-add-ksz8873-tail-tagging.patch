From: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date: Fri, 14 Sep 2018 11:43:34 +0200
Subject: [PATCH] dsa: add ksz8873 tail tagging

Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
---
 include/net/dsa.h | 18 +++++++++--------
 net/dsa/Kconfig   |  7 +++++++
 net/dsa/tag_ksz.c | 59 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 76 insertions(+), 8 deletions(-)

diff --git a/include/net/dsa.h b/include/net/dsa.h
index ba6dfff98196..631e75f03199 100644
--- a/include/net/dsa.h
+++ b/include/net/dsa.h
@@ -32,14 +32,15 @@ struct phylink_link_state;
 #define DSA_TAG_PROTO_DSA_VALUE			3
 #define DSA_TAG_PROTO_EDSA_VALUE		4
 #define DSA_TAG_PROTO_GSWIP_VALUE		5
-#define DSA_TAG_PROTO_KSZ9477_VALUE		6
-#define DSA_TAG_PROTO_KSZ9893_VALUE		7
-#define DSA_TAG_PROTO_LAN9303_VALUE		8
-#define DSA_TAG_PROTO_MTK_VALUE			9
-#define DSA_TAG_PROTO_QCA_VALUE			10
-#define DSA_TAG_PROTO_TRAILER_VALUE		11
-#define DSA_TAG_PROTO_8021Q_VALUE		12
-#define DSA_TAG_PROTO_SJA1105_VALUE		13
+#define DSA_TAG_PROTO_KSZ8873_VALUE		6
+#define DSA_TAG_PROTO_KSZ9477_VALUE		7
+#define DSA_TAG_PROTO_KSZ9893_VALUE		8
+#define DSA_TAG_PROTO_LAN9303_VALUE		9
+#define DSA_TAG_PROTO_MTK_VALUE			10
+#define DSA_TAG_PROTO_QCA_VALUE			11
+#define DSA_TAG_PROTO_TRAILER_VALUE		12
+#define DSA_TAG_PROTO_8021Q_VALUE		13
+#define DSA_TAG_PROTO_SJA1105_VALUE		14
 
 enum dsa_tag_protocol {
 	DSA_TAG_PROTO_NONE		= DSA_TAG_PROTO_NONE_VALUE,
@@ -48,6 +49,7 @@ enum dsa_tag_protocol {
 	DSA_TAG_PROTO_DSA		= DSA_TAG_PROTO_DSA_VALUE,
 	DSA_TAG_PROTO_EDSA		= DSA_TAG_PROTO_EDSA_VALUE,
 	DSA_TAG_PROTO_GSWIP		= DSA_TAG_PROTO_GSWIP_VALUE,
+	DSA_TAG_PROTO_KSZ8873		= DSA_TAG_PROTO_KSZ8873_VALUE,
 	DSA_TAG_PROTO_KSZ9477		= DSA_TAG_PROTO_KSZ9477_VALUE,
 	DSA_TAG_PROTO_KSZ9893		= DSA_TAG_PROTO_KSZ9893_VALUE,
 	DSA_TAG_PROTO_LAN9303		= DSA_TAG_PROTO_LAN9303_VALUE,
diff --git a/net/dsa/Kconfig b/net/dsa/Kconfig
index d449f78c1bd0..5bd4da0e17ea 100644
--- a/net/dsa/Kconfig
+++ b/net/dsa/Kconfig
@@ -84,6 +84,13 @@ config NET_DSA_TAG_KSZ
 	  Say Y if you want to enable support for tagging frames for the
 	  Microchip 9893 family of switches.
 
+config NET_DSA_TAG_KSZ8873
+	tristate "Tag driver for Microchip 8873 family of switches"
+	select NET_DSA_TAG_KSZ_COMMON
+	help
+	  Say Y if you want to enable support for tagging frames for the
+	  Microchip 8873 family of switches.
+
 config NET_DSA_TAG_KSZ9477
 	tristate "Tag driver for Microchip 9477 family of switches"
 	select NET_DSA_TAG_KSZ_COMMON
diff --git a/net/dsa/tag_ksz.c b/net/dsa/tag_ksz.c
index b4872b87d4a6..8ea3b8d67bc4 100644
--- a/net/dsa/tag_ksz.c
+++ b/net/dsa/tag_ksz.c
@@ -69,6 +69,64 @@ static struct sk_buff *ksz_common_rcv(struct sk_buff *skb,
 	return skb;
 }
 
+/* For ingress (Host -> KSZ8873), 1 byte is added before FCS.
+ * ---------------------------------------------------------------------------
+ * DA(6bytes)|SA(6bytes)|....|Data(nbytes)|tag0(1byte)|tag1(1byte)|FCS(4bytes)
+ * ---------------------------------------------------------------------------
+ * tag0[1,0] : represents port
+ *             (e.g. 0b00=address-lookup 0b01=port1, 0b10=port2, 0b11=port1+port2)
+ * tag0[3,2] : bits two and three represent prioritization
+ *             (e.g. 0b00xx=prio0, 0b01xx=prio1, 0b10xx=prio2, 0b11xx=prio3)
+ *
+ * For egress (KSZ8873 -> Host), 1 byte is added before FCS.
+ * ---------------------------------------------------------------------------
+ * DA(6bytes)|SA(6bytes)|....|Data(nbytes)|tag0(1byte)|FCS(4bytes)
+ * ---------------------------------------------------------------------------
+ * tag0[0]   : zero-based value represents port
+ *	       (eg, 0x0=port1, 0x1=port2)
+ */
+
+static struct sk_buff *ksz8873_xmit(struct sk_buff *skb,
+				    struct net_device *dev)
+{
+	struct dsa_port *dp = dsa_slave_to_port(dev);
+	struct sk_buff *nskb;
+	u16 *tag;
+
+	nskb = ksz_common_xmit(skb, dev, KSZ_INGRESS_TAG_LEN);
+	if (!nskb)
+		return NULL;
+
+	/* Tag encoding */
+	tag = skb_put(nskb, KSZ_INGRESS_TAG_LEN);
+
+	*tag = BIT(dp->index);
+
+	return nskb;
+}
+
+static struct sk_buff *ksz8873_rcv(struct sk_buff *skb, struct net_device *dev,
+				   struct packet_type *pt)
+{
+	/* Tag decoding */
+	u8 *tag = skb_tail_pointer(skb) - KSZ_EGRESS_TAG_LEN;
+	unsigned int port = tag[0] & 1;
+	unsigned int len = KSZ_EGRESS_TAG_LEN;
+
+	return ksz_common_rcv(skb, dev, port, len);
+}
+
+static const struct dsa_device_ops ksz8873_netdev_ops = {
+	.name	= "ksz8873",
+	.proto	= DSA_TAG_PROTO_KSZ8873,
+	.xmit	= ksz8873_xmit,
+	.rcv	= ksz8873_rcv,
+	.overhead = KSZ_INGRESS_TAG_LEN,
+};
+
+DSA_TAG_DRIVER(ksz8873_netdev_ops);
+MODULE_ALIAS_DSA_TAG_DRIVER(DSA_TAG_PROTO_KSZ8873);
+
 /*
  * For Ingress (Host -> KSZ9477), 2 bytes are added before FCS.
  * ---------------------------------------------------------------------------
@@ -183,6 +241,7 @@ DSA_TAG_DRIVER(ksz9893_netdev_ops);
 MODULE_ALIAS_DSA_TAG_DRIVER(DSA_TAG_PROTO_KSZ9893);
 
 static struct dsa_tag_driver *dsa_tag_driver_array[] = {
+	&DSA_TAG_DRIVER_NAME(ksz8873_netdev_ops),
 	&DSA_TAG_DRIVER_NAME(ksz9477_netdev_ops),
 	&DSA_TAG_DRIVER_NAME(ksz9893_netdev_ops),
 };
